{
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "extends": [
    "airbnb",
    "prettier",
    "prettier/@typescript-eslint",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "prettier",
    "import",
    "react-hooks"
  ],
  "rules": {
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/jsx-no-duplicate-props": [2, { "ignoreCase": false }],
    "react/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],
    "arrow-parens": ["error", "always"],
    "react/jsx-one-expression-per-line": "off",
    "react/prop-types": "off",
    "jsx-a11y/label-has-associated-control": "off",
    "react/jsx-props-no-spreading": "off",
    "consistent-return": "off",
    "no-param-reassign": "off",
    "no-plusplus": "off",
    "no-empty": ["error", { "allowEmptyCatch": true }],
    "no-useless-constructor": "off",
    "comma-dangle": ["error", "never"],
    "linebreak-style": ["error", "unix"],
    "no-console": "error",
    "prefer-promise-reject-errors": "off",
    "quotes": ["error", "double", "avoid-escape"],
    "@typescript-eslint/no-unused-vars": "off", // typescript already handles that issue
    "sort-imports": [
      "error",
      {
        "ignoreCase": false,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false
      }
    ],
    "import/group-exports": ["error"],
    "import/prefer-default-export": "off",
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "internal",
          "external",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc" /* sort in ascending order. Options: ['ignore', 'asc', 'desc'] */,
          "caseInsensitive": true /* ignore case. Options: [true, false] */
        }
      }
    ],
    "import/extensions": "off",
    "import/no-unresolved": "off",
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": ["*"],
        "next": [
          "block",
          "class",
          "continue",
          "export",
          "expression",
          "function",
          "if",
          "return",
          "switch",
          "try"
        ]
      },
      {
        "blankLine": "always",
        "prev": [
          "block",
          "class",
          "continue",
          "export",
          "expression",
          "function",
          "if",
          "return",
          "switch",
          "try"
        ],
        "next": ["*"]
      },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      {
        "blankLine": "never",
        "prev": ["singleline-const"],
        "next": ["singleline-const"]
      },
      {
        "blankLine": "always",
        "prev": ["const"],
        "next": ["block-like"]
      },
      {
        "blankLine": "always",
        "prev": ["block-like"],
        "next": ["const"]
      },
      {
        "blankLine": "never",
        "prev": ["singleline-let"],
        "next": ["singleline-let"]
      }
    ],
    "import/no-extraneous-dependencies": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "prettier/prettier": ["error"]
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      // use <root>/tsconfig.json
      "typescript": {
        "alwaysTryTypes": true
        // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
      }
    },
    "react": {
      "pragma": "React",
      "version": "16.13.1"
    }
  },
  "overrides": [
    {
      "files": ["**/*.type.ts", "**/types.ts"],
      "rules": {
        "import/group-exports": "off",
        "import/prefer-default-export": "off"
      }
    },
    {
      "files": ["react-app-env.d.ts"],
      "rules": {
        "spaced-comment": "off"
      }
    },
    {
      "files": ["*.{spec,test}.{ts,tsx}"],
      "rules": {
        "@typescript-eslint/no-non-null-assertion": "off"
      }
    },
    {
      "files": ["*.dto.ts"],
      "rules": {
        "max-classes-per-file": "off"
      }
    }
  ]
}
